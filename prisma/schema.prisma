datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // @@map("accounts")

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique(map: "User_email_key")
  password      String?
  name          String?
  totalAmout    Decimal?
  createdAt     DateTime  @default(now())
  emailVerified DateTime? @map("email_verified")
  updatedAt     DateTime  @default(now())
  image         String?
  account       Account[]
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

// model DetallesPago {
//   id               String      @id @default(cuid())
//   formPaymentId    String      @unique @map("formPayment_id")
//   emailPaypal      String?
//   direccionEnvio   String?
//   numeroTarjeta    String?
//   codigoSeguridad  String?
//   fechaVencimiento String?
//   formPayment      Payment @relation(fields: [formPaymentId], references: [id])
// }

model Payment {
  id            String   @id @default(cuid())
  paypalId      String?
  email         String?
  celular       String?
  medioDePago   String?
  nombreTarjeta String?
  pais          String?
  codigoZip     String?
  montoTotal    Decimal
  modoTarjeta   String
  estadoPago    String?
  createdAt     DateTime @default(now())
  updateAt      DateTime @updatedAt
}
